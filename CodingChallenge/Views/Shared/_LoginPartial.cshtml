@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            @*<form id="external-account" method="post" class="form-horizontal" action="/Identity/Account/ExternalLogin?returnUrl=%2F">*@
            <form id="external-account" class="form-inline" asp-area="Identity" asp-page="/Account/ExternalLogin" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">

                <div>
                    <p>
                        <button type="submit" class="btn btn-danger" name="provider" value="Google" title="Log in using your Google account">Google</button>
                    </p>
                </div>
            </form>
        </li>
    }
</ul>